name: "Apply Terraform changes"

env:
  REGION: "eu-north-1"
  ROLE_TO_ASSUME: "arn:aws:iam::941377123399:role/terraform-github-action"

permissions:
  contents: read
  id-token: write

on:
  issue_comment:
    types: [ created ]

jobs:
  apply:
    if: github.event.issue.pull_request && github.event.comment.body == '!apply'
    name: "Apply Terraform changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/deployments/lab6
    permissions:
      contents: write
      issues: write
      id-token: write
      pull-requests: write
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: ${{ env.ROLE_TO_ASSUME }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC_from_taltech_aws
          aws-region: ${{ env.REGION }}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

      - name: Merge Pull Request
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.pulls.merge({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            })
